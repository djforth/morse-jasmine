(function(global,factory){if('function'==typeof define&&define.amd)define(['module'],factory);else if('undefined'!=typeof exports)factory(module);else{var mod={exports:{}};factory(mod),global.mock_class=mod.exports}})(this,function(module){'use strict';function addMethods(ClassConst,methods){return _.map(methods,function(m){var title=_.isString(m)?m:m.title,spy=jasmine.createSpy(title);return m.value&&m.type&&withReturn(spy,m.type,m.value),ClassConst.prototype[title]=spy,{title:title,spy:spy}})}module.exports=function(title,methods){var init=jasmine.createSpy('init'),spies=[{title:'init',spy:init}],ConstClass=function(){init.apply(this,arguments)};return _.isArray(methods)&&!_.isEmpty(methods)&&(spies=spies.concat(addMethods(ConstClass,methods))),{getMock:function(){return ConstClass},getConstSpy:function(){var obj=_.find(spies,function(spy){return'init'===spy.title});return obj.spy},getSpy:function(spy_name){var obj=_.find(spies,function(spy){return spy.title===spy_name});return obj.spy}}}});